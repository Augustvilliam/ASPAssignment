@model Business.Dtos.ProjectDto

@{
    var now = DateTime.Now;
    var end = Model.EndDate;
    string deadlineText;
    bool isOverdue = end < now;
    var isAdmin = User.IsAppAdmin();
    var isUser = User.IsInRole("User");

    if (isOverdue)
    {
        deadlineText = "OVERDUE";
    }
    else
    {
        var daysLeft = (end - now).Days;
        deadlineText = $"{daysLeft} day{(daysLeft != 1 ? "s" : "")} left";
    }
}

<div class="project-card">
    <img class="project-img" src="@(!string.IsNullOrEmpty(Model.ProjectImagePath) ? Model.ProjectImagePath : "/img/Image.svg")" alt="Project Image" />

    <div class="text-info">
        <h2>@Model.ProjectName</h2>
        <h3>@Model.ClientName</h3>
    </div>

    @if (isAdmin || isUser)
    {
        <div class="more-container">
            <button class="more-btn" data-project-id="@Model.Id">
                <img src="~/img/More 2.svg" alt="More">
            </button>

            <div class="more-menu d-none">
                @if (isAdmin)
                {
                    <button class="dropdown-item text-start w-100 edit-btn" data-bs-toggle="modal" data-bs-target="#editprojectModal">
                        <i class="fa-solid fa-pen-to-square"></i> Edit Project
                    </button>
                    <button class="dropdown-item text-start w-100 addmember-btn" data-project-id="@Model.Id">
                        <i class="fa-solid fa-user"></i> Add Member
                    </button>
                    <button class="dropdown-item text-start w-100 delete-btn" data-project-id="@Model.Id">
                        <i class="fa-solid fa-trash-can"></i> Delete Project
                    </button>
                }
                else if (isUser)
                {
                    <button class="dropdown-item text-start w-100 mark-complete-btn"
                            data-project-id="@Model.Id"
                            data-status="Completed">
                        <i class="fa-solid fa-check"></i> Mark as Complete
                    </button>
                }
            </div>
        </div>
    }
    <div class="p-description">@Html.Raw(Model.Description)</div>

    <div class="temp-deadline-container d-flex align-items-center gap-2 mt-2">
        <img src="~/img/Clock.svg" alt="Clock">
        <span class="temp-deadline-text @(isOverdue ? "text-danger fw-bold" : "")">
            @deadlineText
        </span>
    </div>

    <div class="current-users mt-2">
        @if (Model.Members != null && Model.Members.Any())
        {
            foreach (var member in Model.Members)
            {
                <img src="@(!string.IsNullOrEmpty(member.ProfileImagePath) ? member.ProfileImagePath : "/img/Employee.svg")" alt="User" />
            }
        }
    </div>
</div>
<script>
    async function preloadProjectData(projectId) {
        const response = await fetch(`/Project/GetProject/${projectId}`);
        const data = await response.json();

        if (data.members) {
            selectedMembers = data.members;
            renderSelectedMembers();
            updateSelectedIds();
        }

        document.querySelector('[name="ProjectName"]').value = data.projectName;
        document.querySelector('[name="ClientName"]').value = data.clientName;
        document.querySelector('[name="Description"]').value = data.description || '';
        document.querySelector('[name="StartDate"]').value = data.startDate.slice(0, 10);
        document.querySelector('[name="EndDate"]').value = data.endDate.slice(0, 10);
        document.querySelector('[name="Budget"]').value = data.budget;
        document.querySelector('[name="Status"]').value = data.status;

        if (data.projectImagePath) {
            document.getElementById("editProjectPreviewImage").src = data.projectImagePath;
        }

        document.querySelector('[name="Id"]').value = data.id;
    }
</script>