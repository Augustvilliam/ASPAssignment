@model ASPAssignment.ViewModels.LoginForm

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Login";
    ViewBag.ReturnUrl ??= "/Home/Index";
}

<div class="reg-form-container">
    <h1>Login</h1>

    <h2>Sign in with Third Party?</h2>
    <button type="button" class="gotomedia-btn">
        <a asp-controller="External" asp-action="ExternalSignIn">Sign In with Third Party Sites!</a>
    </button>

    <img class="splitter" src="~/img/splitter.svg" alt="Splitter" />

    <form class="reg-form" asp-controller="Account" asp-action="Login" method="post" novalidate>
        @Html.AntiForgeryToken()
        <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
        {
            <div class="text-danger mb-2">@ViewBag.ErrorMessage</div>
        }

        <label asp-for="Email">Email</label>
        <input asp-for="Email" class="form-input-login" placeholder="Your Email" />
        <span asp-validation-for="Email" class="text-danger"></span>

        <label asp-for="Password">Password</label>
        <input asp-for="Password" class="form-input-login" placeholder="Your Password" />
        <span asp-validation-for="Password" class="text-danger"></span>

        <div id="checkbox-div" class="Spacebetween">
            <div class="form-check">
                <input asp-for="RememberMe" type="checkbox" class="form-check-input" id="rememberMe" />
                <label asp-for="RememberMe" class="form-check-label" for="rememberMe">Remember Me</label>
            </div>
            <a href="#" class="forgot-pw-link">Forgot Password?</a>
        </div>

        <button type="submit" class="login-btn">Log in</button>
    </form>

    <p>
        Don't have an account?
        <a asp-controller="Account" asp-action="Register">Sign Up</a>
    </p>
    <p>
        Are you an Admin?
        <a asp-controller="Admin" asp-action="Login"> Press Here</a>
    </p>
</div>

<script src="~/js/InputError.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', () => {
        const forgotLink = document.querySelector('.forgot-pw-link');
        if (!forgotLink) return;

        const handler = e => {
            e.preventDefault();
            if (document.querySelector('.forgot-pw-msg')) return;

            const msg = document.createElement('span');
            msg.textContent = 'Sorry not implemented :(';
            msg.classList.add('text-danger', 'forgot-pw-msg');
            forgotLink.parentNode.appendChild(msg);

            forgotLink.removeEventListener('click', handler);
            forgotLink.style.pointerEvents = 'none';
            
        };

        forgotLink.addEventListener('click', handler);
    });
</script>